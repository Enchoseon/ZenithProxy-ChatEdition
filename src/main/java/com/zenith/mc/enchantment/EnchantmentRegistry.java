// Auto-Generated by ZenithProxy Data Generator
package com.zenith.mc.enchantment;

import com.zenith.mc.Registry;

public final class EnchantmentRegistry {
    public static final Registry<EnchantmentData> REGISTRY = new Registry<EnchantmentData>(42);

    public static final EnchantmentData PROTECTION = REGISTRY.register(new EnchantmentData(0, "protection"));

    public static final EnchantmentData FIRE_PROTECTION = REGISTRY.register(new EnchantmentData(1, "fire_protection"));

    public static final EnchantmentData FEATHER_FALLING = REGISTRY.register(new EnchantmentData(2, "feather_falling"));

    public static final EnchantmentData BLAST_PROTECTION = REGISTRY.register(new EnchantmentData(3, "blast_protection"));

    public static final EnchantmentData PROJECTILE_PROTECTION = REGISTRY.register(new EnchantmentData(4, "projectile_protection"));

    public static final EnchantmentData RESPIRATION = REGISTRY.register(new EnchantmentData(5, "respiration"));

    public static final EnchantmentData AQUA_AFFINITY = REGISTRY.register(new EnchantmentData(6, "aqua_affinity"));

    public static final EnchantmentData THORNS = REGISTRY.register(new EnchantmentData(7, "thorns"));

    public static final EnchantmentData DEPTH_STRIDER = REGISTRY.register(new EnchantmentData(8, "depth_strider"));

    public static final EnchantmentData FROST_WALKER = REGISTRY.register(new EnchantmentData(9, "frost_walker"));

    public static final EnchantmentData BINDING_CURSE = REGISTRY.register(new EnchantmentData(10, "binding_curse"));

    public static final EnchantmentData SOUL_SPEED = REGISTRY.register(new EnchantmentData(11, "soul_speed"));

    public static final EnchantmentData SWIFT_SNEAK = REGISTRY.register(new EnchantmentData(12, "swift_sneak"));

    public static final EnchantmentData SHARPNESS = REGISTRY.register(new EnchantmentData(13, "sharpness"));

    public static final EnchantmentData SMITE = REGISTRY.register(new EnchantmentData(14, "smite"));

    public static final EnchantmentData BANE_OF_ARTHROPODS = REGISTRY.register(new EnchantmentData(15, "bane_of_arthropods"));

    public static final EnchantmentData KNOCKBACK = REGISTRY.register(new EnchantmentData(16, "knockback"));

    public static final EnchantmentData FIRE_ASPECT = REGISTRY.register(new EnchantmentData(17, "fire_aspect"));

    public static final EnchantmentData LOOTING = REGISTRY.register(new EnchantmentData(18, "looting"));

    public static final EnchantmentData SWEEPING_EDGE = REGISTRY.register(new EnchantmentData(19, "sweeping_edge"));

    public static final EnchantmentData EFFICIENCY = REGISTRY.register(new EnchantmentData(20, "efficiency"));

    public static final EnchantmentData SILK_TOUCH = REGISTRY.register(new EnchantmentData(21, "silk_touch"));

    public static final EnchantmentData UNBREAKING = REGISTRY.register(new EnchantmentData(22, "unbreaking"));

    public static final EnchantmentData FORTUNE = REGISTRY.register(new EnchantmentData(23, "fortune"));

    public static final EnchantmentData POWER = REGISTRY.register(new EnchantmentData(24, "power"));

    public static final EnchantmentData PUNCH = REGISTRY.register(new EnchantmentData(25, "punch"));

    public static final EnchantmentData FLAME = REGISTRY.register(new EnchantmentData(26, "flame"));

    public static final EnchantmentData INFINITY = REGISTRY.register(new EnchantmentData(27, "infinity"));

    public static final EnchantmentData LUCK_OF_THE_SEA = REGISTRY.register(new EnchantmentData(28, "luck_of_the_sea"));

    public static final EnchantmentData LURE = REGISTRY.register(new EnchantmentData(29, "lure"));

    public static final EnchantmentData LOYALTY = REGISTRY.register(new EnchantmentData(30, "loyalty"));

    public static final EnchantmentData IMPALING = REGISTRY.register(new EnchantmentData(31, "impaling"));

    public static final EnchantmentData RIPTIDE = REGISTRY.register(new EnchantmentData(32, "riptide"));

    public static final EnchantmentData CHANNELING = REGISTRY.register(new EnchantmentData(33, "channeling"));

    public static final EnchantmentData MULTISHOT = REGISTRY.register(new EnchantmentData(34, "multishot"));

    public static final EnchantmentData QUICK_CHARGE = REGISTRY.register(new EnchantmentData(35, "quick_charge"));

    public static final EnchantmentData PIERCING = REGISTRY.register(new EnchantmentData(36, "piercing"));

    public static final EnchantmentData DENSITY = REGISTRY.register(new EnchantmentData(37, "density"));

    public static final EnchantmentData BREACH = REGISTRY.register(new EnchantmentData(38, "breach"));

    public static final EnchantmentData WIND_BURST = REGISTRY.register(new EnchantmentData(39, "wind_burst"));

    public static final EnchantmentData MENDING = REGISTRY.register(new EnchantmentData(40, "mending"));

    public static final EnchantmentData VANISHING_CURSE = REGISTRY.register(new EnchantmentData(41, "vanishing_curse"));
}
